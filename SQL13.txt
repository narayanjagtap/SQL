-- Joins in SQL

create database collage;
use collage;

-- create Student table
create table Student(
	stu_id int primary key,
    name varchar(50)
);
-- create course table
create table course(
	stu_id int primary key,
    course varchar(50)
);

-- insert data in student table
Insert into student(stu_id, name)
values
(101,"adam"),
(102,"bob"),
(103,"casey");
-- insert data in course table
insert into course(stu_id, course)
values
(102,"English"),
(105,"Math"),
(103,"Science"),
(107,"Computer Science");

show tables;
select * from student;
select * from course;

-- INNER JOIN
SELECT *
FROM student
INNER JOIN course
ON student.stu_id = course.stu_id;

-- LEFT JOIN
Select *
from student
left join course
on student.stu_id = course.stu_id;

-- RIGHT JOIN
select * 
from student
right join course
on student.stu_id = course.stu_id;

-- FULL JOIN
select * from student
left join course
on student.stu_id = course.stu_id
UNION
select * from student
right join course
on student.stu_id = course.stu_id;


-- create new table Employees in Collage1 database for "self join"
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(100),
    ManagerID INT
);
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES 
(1, 'Alice', NULL),
(2, 'Bob', 1),
(3, 'Charlie', 1),
(4, 'David', 2);

show tables;
select * from employees;

-- SELF JOIN
SELECT a.name AS Employee, b.name AS Manager
FROM Employees AS a
JOIN Employees AS b
ON a.managerId = b.employeeId;


-- UNION
select stu_id from student
UNION						-- does't give duplicate elements
select stu_id from course;

-- UNION ALL
select stu_id from student
UNION ALL					-- Give duplicate elements
select stu_id from course;